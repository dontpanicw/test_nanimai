// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts/{account_id}/balance": {
            "put": {
                "description": "Изменяет текущий баланс счёта на указанную величину",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Изменяет баланс счёта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID счёта",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Изменение баланса",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateBalanceInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{account_id}/limit": {
            "put": {
                "description": "Увеличивает/уменьшает максимальный лимит по счёту",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Обновляет лимит счёта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID счёта",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Изменение лимита",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateLimitInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{account_id}/reservation": {
            "post": {
                "description": "Создаёт резерв на сумму на указанном счёте",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservations"
                ],
                "summary": "Открывает резерв средств",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID счёта",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Параметры резерва",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.OpenReservationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ReservationDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reservations/{reservation_id}/cancel": {
            "post": {
                "description": "Отменяет ранее открытый резерв",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservations"
                ],
                "summary": "Отменяет резерв",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID резерва",
                        "name": "reservation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID сервиса-владельца",
                        "name": "X-Owner-Service-ID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reservations/{reservation_id}/confirm": {
            "post": {
                "description": "Подтверждает ранее открытый резерв",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservations"
                ],
                "summary": "Подтверждает резерв",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID резерва",
                        "name": "reservation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID сервиса-владельца",
                        "name": "X-Owner-Service-ID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "service.OpenReservationInput": {
            "type": "object"
        },
        "service.ReservationDTO": {
            "type": "object",
            "properties": {
                "accountID": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "integer",
                    "format": "int64"
                },
                "expiresAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ownerServiceID": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "service.UpdateBalanceInput": {
            "type": "object",
            "properties": {
                "accountID": {
                    "type": "integer",
                    "format": "int64"
                },
                "delta": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "service.UpdateLimitInput": {
            "type": "object",
            "properties": {
                "accountID": {
                    "type": "integer",
                    "format": "int64"
                },
                "delta": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Balance Service API",
	Description:      "API для управления балансом, лимитами и резервами средств",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
